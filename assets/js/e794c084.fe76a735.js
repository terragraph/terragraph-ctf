"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[620],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),u=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),c=u(n),m=i,f=c["".concat(p,".").concat(m)]||c[m]||d[m]||r;return n?a.createElement(f,l(l({ref:t},s),{},{components:n})):a.createElement(f,l({ref:t},s))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var u=2;u<r;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},3487:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>u});var a=n(7462),i=(n(7294),n(3905));const r={},l="Scan Tests",o={unversionedId:"tests/Scans",id:"tests/Scans",title:"Scan Tests",description:"PBF/IM",source:"@site/../docs/tests/Scans.md",sourceDirName:"tests",slug:"/tests/Scans",permalink:"/terragraph-ctf/tests/Scans",draft:!1,editUrl:"https://github.com/terragraph/terragraph-ctf/edit/main/docs/../docs/tests/Scans.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Link Level Scheduler Tests",permalink:"/terragraph-ctf/tests/LLS"},next:{title:"SW Hybrid Tests",permalink:"/terragraph-ctf/tests/SW_Hybrid"}},p={},u=[{value:"PBF/IM",id:"pbfim",level:2},{value:"<code>PUMA_PBF.RF.T08</code> DN0 to DN1:: UDP traffic:: Measurement :: Apply",id:"puma_pbfrft08-dn0-to-dn1-udp-traffic-measurement--apply",level:3},{value:"<code>PUMA_PBF.RF.T11</code> DN0 to DN1:: UDP traffic:: Measurement :: Apply:: Hybrid",id:"puma_pbfrft11-dn0-to-dn1-udp-traffic-measurement--apply-hybrid",level:3},{value:"<code>PUMA_PBF.RF.T13</code> DN0 to DN1:: +30-degree azimuth rotation",id:"puma_pbfrft13-dn0-to-dn1-30-degree-azimuth-rotation",level:3},{value:"<code>PUMA_PBF.RF.T14</code> DN0 to DN1:: -30-degree azimuth rotation",id:"puma_pbfrft14-dn0-to-dn1--30-degree-azimuth-rotation",level:3},{value:"<code>PUMA_PBF.RF.T15</code> DN0 to CN0:: All",id:"puma_pbfrft15-dn0-to-cn0-all",level:3},{value:"<code>PUMA_PBF.RF.T16</code> P2MP topology",id:"puma_pbfrft16-p2mp-topology",level:3},{value:"<code>PUMA_PBF.RF.T17</code> Butterfly topology",id:"puma_pbfrft17-butterfly-topology",level:3},{value:"<code>PUMA_PBF.RF.T18</code> Y-street topology",id:"puma_pbfrft18-y-street-topology",level:3},{value:"<code>PUMA_IM.RF.Txx</code> All:: PBF:: Broadcast MAC address",id:"puma_imrftxx-all-pbf-broadcast-mac-address",level:3},{value:"RTCAL",id:"rtcal",level:2},{value:"<code>PUMA_RF_RTCAL.RF.T08</code> DN0 to DN1:: UDP traffic:: Measurement ::Apply:: Top Panel",id:"puma_rf_rtcalrft08-dn0-to-dn1-udp-traffic-measurement-apply-top-panel",level:3},{value:"<code>PUMA_RF_RTCAL.RF.T11</code> DN0 to DN1:: UDP traffic:: Measurement ::Apply:: Hybrid:: Top Panel",id:"puma_rf_rtcalrft11-dn0-to-dn1-udp-traffic-measurement-apply-hybrid-top-panel",level:3},{value:"<code>PUMA_RF_RTCAL.RF.T17</code> P2MP Topology",id:"puma_rf_rtcalrft17-p2mp-topology",level:3},{value:"Interference Nulling (CBF)",id:"interference-nulling-cbf",level:2},{value:"<code>CBF-1.4</code> Max Distance Link",id:"cbf-14-max-distance-link",level:3},{value:"<code>CBF-1.6</code> Stats",id:"cbf-16-stats",level:3},{value:"<code>CBF-2.2</code> Y-street",id:"cbf-22-y-street",level:3},{value:"<code>CBF-3.2</code> Force link down during scan procedure",id:"cbf-32-force-link-down-during-scan-procedure",level:3},{value:"<code>CBF-3.4</code> With continuous pings throughout scan verify no timeouts before, during, and after scan",id:"cbf-34-with-continuous-pings-throughout-scan-verify-no-timeouts-before-during-and-after-scan",level:3},{value:"<code>CBF-4.1</code> Performance validation",id:"cbf-41-performance-validation",level:3},{value:"<code>CBF-4.2</code> Small-scale performance quantification",id:"cbf-42-small-scale-performance-quantification",level:3}],s={toc:u};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"scan-tests"},"Scan Tests"),(0,i.kt)("h2",{id:"pbfim"},"PBF/IM"),(0,i.kt)("h3",{id:"puma_pbfrft08-dn0-to-dn1-udp-traffic-measurement--apply"},(0,i.kt)("inlineCode",{parentName:"h3"},"PUMA_PBF.RF.T08")," DN0 to DN1:: UDP traffic:: Measurement :: Apply"),(0,i.kt)("p",null,"Procedure:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"DN0 is the initiator and DN1 is the responder"),(0,i.kt)("li",{parentName:"ol"},"Verify that ignition met the pass criteria if not we need to debug the link"),(0,i.kt)("li",{parentName:"ol"},"Start the bidirectional UDP traffic on the link"),(0,i.kt)("li",{parentName:"ol"},"Verify that link with traffic met the pass criteria if not we need to debug\nthe link"),(0,i.kt)("li",{parentName:"ol"},'Issue the PBF command from DN0 to DN1 \u2192 What is the "Issue PBF Command?"',(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"tg minion fine relative ??"),(0,i.kt)("li",{parentName:"ul"},"manual and automated schedule from E2E?"))),(0,i.kt)("li",{parentName:"ol"},"Apply PBF recommendation for new Tx and Rx beam selection"),(0,i.kt)("li",{parentName:"ol"},"Capture PBF results and produce the heat-map for packet index {0} and {1}\nbased on SNR and RSSI"),(0,i.kt)("li",{parentName:"ol"},"Capture link quality metrics before and after applying PBF recommendations"),(0,i.kt)("li",{parentName:"ol"},"Repeat steps 5 to 8 in reverse direction from DN1 to DN0"),(0,i.kt)("li",{parentName:"ol"},"Evaluate the data against pass criteria"),(0,i.kt)("li",{parentName:"ol"},"Repeat the test 5 times to ensure repeatability")),(0,i.kt)("p",null,"Pass/Fail Criteria:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Heat-map with the main cluster around the center and proper sinc pattern"),(0,i.kt)("li",{parentName:"ul"},"Highly correlated results for packet index {0} and packet index {1}",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"~identical heat-maps"),(0,i.kt)("li",{parentName:"ul"},"~identical number of received measurement packets"))),(0,i.kt)("li",{parentName:"ul"},"No impact on link quality metrics (PER, SNR, ...) except 60% throughput loss\nduring PBF procedure."),(0,i.kt)("li",{parentName:"ul"},"Better or equal link quality metrics after applying the new beams.")),(0,i.kt)("h3",{id:"puma_pbfrft11-dn0-to-dn1-udp-traffic-measurement--apply-hybrid"},(0,i.kt)("inlineCode",{parentName:"h3"},"PUMA_PBF.RF.T11")," DN0 to DN1:: UDP traffic:: Measurement :: Apply:: Hybrid"),(0,i.kt)("p",null,"Procedure:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Same instructions as ",(0,i.kt)("inlineCode",{parentName:"li"},"PBF.RF.T08")," on SW HYBRID link")),(0,i.kt)("h3",{id:"puma_pbfrft13-dn0-to-dn1-30-degree-azimuth-rotation"},(0,i.kt)("inlineCode",{parentName:"h3"},"PUMA_PBF.RF.T13")," DN0 to DN1:: +30-degree azimuth rotation"),(0,i.kt)("p",null,"Procedure:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Start with broadside link"),(0,i.kt)("li",{parentName:"ul"},"Modify the setup by physically rotating one of the sectors in azimuth plane\n(+30 degree)"),(0,i.kt)("li",{parentName:"ul"},"Verify that physical rotation has been correctly captured by repeating\n",(0,i.kt)("inlineCode",{parentName:"li"},"PUMA_PBF.RF.T08")," test")),(0,i.kt)("h3",{id:"puma_pbfrft14-dn0-to-dn1--30-degree-azimuth-rotation"},(0,i.kt)("inlineCode",{parentName:"h3"},"PUMA_PBF.RF.T14")," DN0 to DN1:: -30-degree azimuth rotation"),(0,i.kt)("p",null,"Procedure:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Start with broadside link"),(0,i.kt)("li",{parentName:"ul"},"Modify the setup by physically rotating one of the sectors in azimuth plane\n(-30 degree)"),(0,i.kt)("li",{parentName:"ul"},"Verify that physical rotation has been correctly captured by repeating\n",(0,i.kt)("inlineCode",{parentName:"li"},"PUMA_PBF.RF.T08")," test")),(0,i.kt)("h3",{id:"puma_pbfrft15-dn0-to-cn0-all"},(0,i.kt)("inlineCode",{parentName:"h3"},"PUMA_PBF.RF.T15")," DN0 to CN0:: All"),(0,i.kt)("p",null,"Procedure:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Repeat all ",(0,i.kt)("inlineCode",{parentName:"li"},"PBF.RF")," tests by configuring one side of the link as a CN sector.")),(0,i.kt)("h3",{id:"puma_pbfrft16-p2mp-topology"},(0,i.kt)("inlineCode",{parentName:"h3"},"PUMA_PBF.RF.T16")," P2MP topology"),(0,i.kt)("p",null,"Procedure:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Borrow P2MP setup from LLS test plan (",(0,i.kt)("inlineCode",{parentName:"li"},"LLS-1.1"),")"),(0,i.kt)("li",{parentName:"ul"},"Identify the broadside link or modify the setup to create one broadside link"),(0,i.kt)("li",{parentName:"ul"},"Ignite the topology (Please refer to LLS test plan section ",(0,i.kt)("inlineCode",{parentName:"li"},"LLS-1.1"),")"),(0,i.kt)("li",{parentName:"ul"},"Repeat ",(0,i.kt)("inlineCode",{parentName:"li"},"RF.T08"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"RF.T09")," tests on broadside link",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"PUMA_Follow the suggested traffic profile in each test for the entire\ntopology"),(0,i.kt)("li",{parentName:"ul"},"Follow the topology spec to identify each sector as DN or CN and ignore\nthe test specification"))),(0,i.kt)("li",{parentName:"ul"},"Link quality metrics of the entire topology should remain intact after\nexecuting each test",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Zero link down due to executing the test"),(0,i.kt)("li",{parentName:"ul"},"No impact on critical link metrics like SNR, PER, Throughput, etc.")))),(0,i.kt)("h3",{id:"puma_pbfrft17-butterfly-topology"},(0,i.kt)("inlineCode",{parentName:"h3"},"PUMA_PBF.RF.T17")," Butterfly topology"),(0,i.kt)("p",null,"Procedure:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Borrow butterfly setup from LLS test plan (",(0,i.kt)("inlineCode",{parentName:"li"},"LLS-3.1"),")"),(0,i.kt)("li",{parentName:"ul"},"Identify the broadside link or modify the setup to create one broadside link"),(0,i.kt)("li",{parentName:"ul"},"Ignite the topology (Please refer to LLS test plan section ",(0,i.kt)("inlineCode",{parentName:"li"},"LLS-3.1"),")"),(0,i.kt)("li",{parentName:"ul"},"Repeat ",(0,i.kt)("inlineCode",{parentName:"li"},"RF.T01"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"RF.T02"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"RF.T03"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"RF.T07"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"RF.T08"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"RF.T09")," tests on\nbroadside link",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Follow the suggested traffic profile in each test for the entire topology"),(0,i.kt)("li",{parentName:"ul"},"Follow the topology spec to identify each sector as DN or CN and ignore\nthe test specification"))),(0,i.kt)("li",{parentName:"ul"},"Link quality metrics of the entire topology should remain intact after\nexecuting each test",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Zero link down due to executing the test"),(0,i.kt)("li",{parentName:"ul"},"No impact on critical link metrics like SNR, PER, Throughput, etc.")))),(0,i.kt)("h3",{id:"puma_pbfrft18-y-street-topology"},(0,i.kt)("inlineCode",{parentName:"h3"},"PUMA_PBF.RF.T18")," Y-street topology"),(0,i.kt)("p",null,"Procedure:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Borrow Y-street setup from Y-street test plan."),(0,i.kt)("li",{parentName:"ul"},"Identify the broadside link or modify the setup to create one broadside link"),(0,i.kt)("li",{parentName:"ul"},"Ignite the topology (Please refer to Y-street test plan section ",(0,i.kt)("inlineCode",{parentName:"li"},"Y.C.D.D-1.x"),")"),(0,i.kt)("li",{parentName:"ul"},"Repeat ",(0,i.kt)("inlineCode",{parentName:"li"},"RF.T01"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"RF.T02"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"RF.T03"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"RF.T07"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"RF.T08"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"RF.T09")," tests on\nbroadside link",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Follow the suggested traffic profile in each test for the entire topology"),(0,i.kt)("li",{parentName:"ul"},"Follow the topology spec to identify each sector as DN or CN and ignore\nthe test specification"))),(0,i.kt)("li",{parentName:"ul"},"Link quality metrics of the entire topology should remain intact after\nexecuting each test",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Zero link down due to executing the test"),(0,i.kt)("li",{parentName:"ul"},"No impact on critical link metrics like SNR, PER, Throughput, etc.")))),(0,i.kt)("h3",{id:"puma_imrftxx-all-pbf-broadcast-mac-address"},(0,i.kt)("inlineCode",{parentName:"h3"},"PUMA_IM.RF.Txx")," All:: PBF:: Broadcast MAC address"),(0,i.kt)("p",null,"Procedure:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Repeat all tests in IM mode with broadcast MAC address but limit to test case\n",(0,i.kt)("inlineCode",{parentName:"li"},"PBF.RF.T01")," through ",(0,i.kt)("inlineCode",{parentName:"li"},"PBF.RF.T06")," as we are not applying the results in IM\nmode and it is measurement only. Tests ",(0,i.kt)("inlineCode",{parentName:"li"},"PBF.RFT16-18")," should also be run in\nthe context of IM, since they excite P2MP topologies for this feature.")),(0,i.kt)("h2",{id:"rtcal"},"RTCAL"),(0,i.kt)("h3",{id:"puma_rf_rtcalrft08-dn0-to-dn1-udp-traffic-measurement-apply-top-panel"},(0,i.kt)("inlineCode",{parentName:"h3"},"PUMA_RF_RTCAL.RF.T08")," DN0 to DN1:: UDP traffic:: Measurement ::Apply:: Top Panel"),(0,i.kt)("p",null,"Procedure:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"DN0 is the initiator and DN1 is the responder"),(0,i.kt)("li",{parentName:"ol"},"Verify that ignition met the pass criteria if not we need to debug the link"),(0,i.kt)("li",{parentName:"ol"},"Start the bidirectional UDP traffic on the link"),(0,i.kt)("li",{parentName:"ol"},"Verify that link with traffic met the pass criteria if not we need to debug\nthe link"),(0,i.kt)("li",{parentName:"ol"},"Issue the RTCAL command from DN0 (CAL Tx) to DN1"),(0,i.kt)("li",{parentName:"ol"},"Capture RTCAL results for packet index {0} and {1}"),(0,i.kt)("li",{parentName:"ol"},"Repeat steps 5 & 6 in reverse direction from DN1 to DN0"),(0,i.kt)("li",{parentName:"ol"},"Issue the RTCAL command from DN0 to DN1(CAL RX)"),(0,i.kt)("li",{parentName:"ol"},"Capture RTCAL results for packet index {0} and {1}"),(0,i.kt)("li",{parentName:"ol"},"Repeat steps 8 & 9 in reverse direction from DN1 to DN0"),(0,i.kt)("li",{parentName:"ol"},"Apply newly calibrated arrays"),(0,i.kt)("li",{parentName:"ol"},"Capture link quality metrics before and after applying RTCAL updates"),(0,i.kt)("li",{parentName:"ol"},"Evaluate the data against pass criteria"),(0,i.kt)("li",{parentName:"ol"},"Repeat the test 5 times to ensure repeatability")),(0,i.kt)("p",null,"Pass/Fail Criteria:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Negligible packet loss for packet index {0}"),(0,i.kt)("li",{parentName:"ul"},"Negligible packet loss for packet index {1}"),(0,i.kt)("li",{parentName:"ul"},"Uniform SNR and RSSI distribution with +/- 5db of the nominal link SNR and\nRSSI"),(0,i.kt)("li",{parentName:"ul"},"Verify correct indices on each side of the link based on the RTCAL\nspecification"),(0,i.kt)("li",{parentName:"ul"},"No impact on link quality metrics (PER, SNR, ...) except 60% throughput loss\nduring RTCAL procedure."),(0,i.kt)("li",{parentName:"ul"},"Better or equal link quality metrics after calibrating the beams")),(0,i.kt)("h3",{id:"puma_rf_rtcalrft11-dn0-to-dn1-udp-traffic-measurement-apply-hybrid-top-panel"},(0,i.kt)("inlineCode",{parentName:"h3"},"PUMA_RF_RTCAL.RF.T11")," DN0 to DN1:: UDP traffic:: Measurement ::Apply:: Hybrid:: Top Panel"),(0,i.kt)("p",null,"Procedure:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Same instructions as ",(0,i.kt)("inlineCode",{parentName:"li"},"RTCAL.RF.T08")," on SW HYBRID link")),(0,i.kt)("h3",{id:"puma_rf_rtcalrft17-p2mp-topology"},(0,i.kt)("inlineCode",{parentName:"h3"},"PUMA_RF_RTCAL.RF.T17")," P2MP Topology"),(0,i.kt)("p",null,"Procedure:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Borrow P2MP setup from LLS test plan (",(0,i.kt)("inlineCode",{parentName:"li"},"LLS-1.1"),")"),(0,i.kt)("li",{parentName:"ul"},"Identify the broadside link or modify the setup to create one broadside link"),(0,i.kt)("li",{parentName:"ul"},"Ignite the topology (Please refer to LLS test plan section ",(0,i.kt)("inlineCode",{parentName:"li"},"LLS-1.1"),")"),(0,i.kt)("li",{parentName:"ul"},"Repeat ",(0,i.kt)("inlineCode",{parentName:"li"},"RF.T01"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"RF.T02"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"RF.T03"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"RF.T07"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"RF.T08"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"RF.T09")," tests on\nbroadside link",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Follow the suggested traffic profile in each test for the entire topology"),(0,i.kt)("li",{parentName:"ul"},"Follow the topology spec to identify each sector as DN or CN and ignore\nthe test specification"))),(0,i.kt)("li",{parentName:"ul"},"Link quality metrics of the entire topology should remain intact after\nexecuting each test",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Zero link down due to executing the test"),(0,i.kt)("li",{parentName:"ul"},"No impact on critical link metrics like SNR, PER, Throughput, etc.")))),(0,i.kt)("h2",{id:"interference-nulling-cbf"},"Interference Nulling (CBF)"),(0,i.kt)("h3",{id:"cbf-14-max-distance-link"},(0,i.kt)("inlineCode",{parentName:"h3"},"CBF-1.4")," Max Distance Link"),(0,i.kt)("p",null,"Procedure:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"RX CBF with 300 m victim link and 30 m aggressor link (functional test for\nvictim TX delay)",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Verify VRX packet 0 SINR (with interference) <= VRX packet 1 SINR (no\ninterference) for all beams (if victim packets arrive first SINR may be\nhigher for packets with interference than those without interference)")))),(0,i.kt)("h3",{id:"cbf-16-stats"},(0,i.kt)("inlineCode",{parentName:"h3"},"CBF-1.6")," Stats"),(0,i.kt)("p",null,"Procedure:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Verify scan stats can be enabled/disabled from controller"),(0,i.kt)("li",{parentName:"ul"},"Verify when scan stats enabled scan counters updated correctly (",(0,i.kt)("inlineCode",{parentName:"li"},"numOfScan"),",\n",(0,i.kt)("inlineCode",{parentName:"li"},"numOfImScan"),", etc.)",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Currently no stats for RTCAL and CBF beam in use")))),(0,i.kt)("h3",{id:"cbf-22-y-street"},(0,i.kt)("inlineCode",{parentName:"h3"},"CBF-2.2")," Y-street"),(0,i.kt)("p",null,"Procedure:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"RX CBF and TX CBF with Y-street links")),(0,i.kt)("h3",{id:"cbf-32-force-link-down-during-scan-procedure"},(0,i.kt)("inlineCode",{parentName:"h3"},"CBF-3.2")," Force link down during scan procedure"),(0,i.kt)("p",null,"Procedure:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Verify link up still functional"),(0,i.kt)("li",{parentName:"ul"},"After link up completes, verify scan procedures (system still in good state)")),(0,i.kt)("h3",{id:"cbf-34-with-continuous-pings-throughout-scan-verify-no-timeouts-before-during-and-after-scan"},(0,i.kt)("inlineCode",{parentName:"h3"},"CBF-3.4")," With continuous pings throughout scan verify no timeouts before, during, and after scan"),(0,i.kt)("p",null,"Details TBD"),(0,i.kt)("h3",{id:"cbf-41-performance-validation"},(0,i.kt)("inlineCode",{parentName:"h3"},"CBF-4.1")," Performance validation"),(0,i.kt)("p",null,"Procedure:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Execute RX CBF and TX CBF for nominal V topology with main lobes close to\nboresight and interference <20 degrees",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Verify >5 dB suppression achieved for direct sidelobe interference")))),(0,i.kt)("h3",{id:"cbf-42-small-scale-performance-quantification"},(0,i.kt)("inlineCode",{parentName:"h3"},"CBF-4.2")," Small-scale performance quantification"),(0,i.kt)("p",null,"Procedure:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Quantify RX CBF and TX CBF interference suppression across interference angle\n(main lobe close to boresight)"),(0,i.kt)("li",{parentName:"ul"},"Quantify RX CBF and TX CBF interference suppression across main lobe angle\n(fixed interference angle relative main lobe)"),(0,i.kt)("li",{parentName:"ul"},"Quantify RX CBF performance with 2 or more aggressor links"),(0,i.kt)("li",{parentName:"ul"},"Quantify TX CBF performance with 2 or more victim link")))}d.isMDXComponent=!0}}]);