"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[141],{3905:(t,e,a)=>{a.d(e,{Zo:()=>u,kt:()=>s});var n=a(7294);function l(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function r(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?r(Object(a),!0).forEach((function(e){l(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function N(t,e){if(null==t)return{};var a,n,l=function(t,e){if(null==t)return{};var a,n,l={},r=Object.keys(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||(l[a]=t[a]);return l}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(l[a]=t[a])}return l}var p=n.createContext({}),d=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},u=function(t){var e=d(t.components);return n.createElement(p.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},o=n.forwardRef((function(t,e){var a=t.components,l=t.mdxType,r=t.originalType,p=t.parentName,u=N(t,["components","mdxType","originalType","parentName"]),o=d(a),s=l,k=o["".concat(p,".").concat(s)]||o[s]||m[s]||r;return a?n.createElement(k,i(i({ref:e},u),{},{components:a})):n.createElement(k,i({ref:e},u))}));function s(t,e){var a=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var r=a.length,i=new Array(r);i[0]=o;var N={};for(var p in e)hasOwnProperty.call(e,p)&&(N[p]=e[p]);N.originalType=t,N.mdxType="string"==typeof t?t:l,i[1]=N;for(var d=2;d<r;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}o.displayName="MDXCreateElement"},5963:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>N,toc:()=>d});var n=a(7462),l=(a(7294),a(3905));const r={},i="SW Hybrid Tests",N={unversionedId:"tests/SW_Hybrid",id:"tests/SW_Hybrid",title:"SW Hybrid Tests",description:"DN-Only Tests",source:"@site/../docs/tests/SW_Hybrid.md",sourceDirName:"tests",slug:"/tests/SW_Hybrid",permalink:"/terragraph-ctf/tests/SW_Hybrid",draft:!1,editUrl:"https://github.com/terragraph/terragraph-ctf/edit/main/docs/../docs/tests/SW_Hybrid.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Scan Tests",permalink:"/terragraph-ctf/tests/Scans"},next:{title:"Y-Street Tests",permalink:"/terragraph-ctf/tests/Y_Street"}},p={},d=[{value:"DN-Only Tests",id:"dn-only-tests",level:2},{value:"<code>PUMA_RF_SHT-1.0</code> Single DN-to-DN link",id:"puma_rf_sht-10-single-dn-to-dn-link",level:3},{value:"DN-CN Tests",id:"dn-cn-tests",level:2},{value:"<code>PUMA_RF_SHT-2.0</code> DN-to-CN (P2MP)",id:"puma_rf_sht-20-dn-to-cn-p2mp",level:3},{value:"<code>PUMA_RF_SHT-3.0</code> DN-to-DN+CNs",id:"puma_rf_sht-30-dn-to-dncns",level:3}],u={toc:d};function m(t){let{components:e,...a}=t;return(0,l.kt)("wrapper",(0,n.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"sw-hybrid-tests"},"SW Hybrid Tests"),(0,l.kt)("h2",{id:"dn-only-tests"},"DN-Only Tests"),(0,l.kt)("p",null,"These tests are performed using E2E controller (ARM or x86 depending on\navailability)."),(0,l.kt)("h3",{id:"puma_rf_sht-10-single-dn-to-dn-link"},(0,l.kt)("inlineCode",{parentName:"h3"},"PUMA_RF_SHT-1.0")," Single DN-to-DN link"),(0,l.kt)("p",null,"Description: P2P association according to polarities shown in the table below:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Test ID"),(0,l.kt)("th",{parentName:"tr",align:null},"DN1 Polarity"),(0,l.kt)("th",{parentName:"tr",align:null},"DN2 Polarity"),(0,l.kt)("th",{parentName:"tr",align:null},"laMaxMcs"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-1.1"),(0,l.kt)("td",{parentName:"tr",align:null},"ODD"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"12")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-1.2"),(0,l.kt)("td",{parentName:"tr",align:null},"EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_ODD"),(0,l.kt)("td",{parentName:"tr",align:null},"12")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-1.5"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"ODD"),(0,l.kt)("td",{parentName:"tr",align:null},"12")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-1.6"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_ODD"),(0,l.kt)("td",{parentName:"tr",align:null},"EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"12")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-1.11"),(0,l.kt)("td",{parentName:"tr",align:null},"ODD"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"9")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-1.12"),(0,l.kt)("td",{parentName:"tr",align:null},"EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_ODD"),(0,l.kt)("td",{parentName:"tr",align:null},"9")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-1.15"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"ODD"),(0,l.kt)("td",{parentName:"tr",align:null},"9")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-1.16"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_ODD"),(0,l.kt)("td",{parentName:"tr",align:null},"EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"9")))),(0,l.kt)("p",null,"Test Setup: P2P setup"),(0,l.kt)("p",null,"Procedure:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Associate DN1 and DN2, with DN1 as the initiator."),(0,l.kt)("li",{parentName:"ul"},"Ping on link using link local from DN1 \u2192 DN2, and vice versa."),(0,l.kt)("li",{parentName:"ul"},"Send bidirectional iPerf traffic using traffic generators."),(0,l.kt)("li",{parentName:"ul"},"Dissociate from DN1.")),(0,l.kt)("p",null,"Passing:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"All Associations succeed within 2 attempts."),(0,l.kt)("li",{parentName:"ul"},"Performance is as expected, as shown in the table above."),(0,l.kt)("li",{parentName:"ul"},"The slot map is 50:50 on the Hybrid DN sector."),(0,l.kt)("li",{parentName:"ul"},"Ping success."),(0,l.kt)("li",{parentName:"ul"},"Disassociation success.")),(0,l.kt)("h2",{id:"dn-cn-tests"},"DN-CN Tests"),(0,l.kt)("p",null,"These tests are done using E2E controller (ARM or x86 depending on\navailability)."),(0,l.kt)("h3",{id:"puma_rf_sht-20-dn-to-cn-p2mp"},(0,l.kt)("inlineCode",{parentName:"h3"},"PUMA_RF_SHT-2.0")," DN-to-CN (P2MP)"),(0,l.kt)("p",null,'Description: For these tests all three CNs are associated but traffic is only\ntransmitted to the number of CNs givin in the "Number of CNs" column. For the\ncase of traffic being transmitted to multiple CNs each CN is given equal\nbandwidth as shown in table below:'),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Test ID"),(0,l.kt)("th",{parentName:"tr",align:null},"DN Polarity"),(0,l.kt)("th",{parentName:"tr",align:null},"Number of CNs"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-2.1"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-2.2"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"2")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-2.3"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-2.4"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-2.5"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"2")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-2.6"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"3")))),(0,l.kt)("p",null,"Test Setup: P2MP setup"),(0,l.kt)("p",null,"Procedure:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Associate all CNs to the DN, based on the test ID in the table above."),(0,l.kt)("li",{parentName:"ul"},"Ping on link using link local in both directions serially to each CN."),(0,l.kt)("li",{parentName:"ul"},"Send bidirectional iPerf traffic to all CNs from traffic generators."),(0,l.kt)("li",{parentName:"ul"},"Dissociate each CN one-by-one.")),(0,l.kt)("p",null,"Passing:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"All assocs should succeed within 2 attempts"),(0,l.kt)("li",{parentName:"ul"},"Performance is as expected, as shown in the Table above"),(0,l.kt)("li",{parentName:"ul"},"The slot map is 50:50 on the Hybrid DN sector"),(0,l.kt)("li",{parentName:"ul"},"All pings should pass"),(0,l.kt)("li",{parentName:"ul"},"All disassocs should succeed")),(0,l.kt)("h3",{id:"puma_rf_sht-30-dn-to-dncns"},(0,l.kt)("inlineCode",{parentName:"h3"},"PUMA_RF_SHT-3.0")," DN-to-DN+CNs"),(0,l.kt)("p",null,"Description: For this test no matter how many CNs receive/transmitt traffic all\nare associated. In this case the DN to DN link has laMaxMcs set to 12 while the\nDN to CN links has laMaxMcs set to 9. We consider two different cases: in the\nfirst the DN \u2194 DN link is given 75% of the slots and the DN \u2194 CNs link share\n20%. In the second case the DN \u2194 DN link is given 20% of the slots and the DN \u2194\nCNs link share 75%. In these tests all CNs split the available BW equally as\nshown in table below:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Test ID"),(0,l.kt)("th",{parentName:"tr",align:null},"DN1 Polarity"),(0,l.kt)("th",{parentName:"tr",align:null},"DN2 Polarity"),(0,l.kt)("th",{parentName:"tr",align:null},"Number of Transmitting CNs on DN1"),(0,l.kt)("th",{parentName:"tr",align:null},"DN/CN bandwidth allocation"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-3.1"),(0,l.kt)("td",{parentName:"tr",align:null},"EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_ODD"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"75/20")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-3.2"),(0,l.kt)("td",{parentName:"tr",align:null},"EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_ODD"),(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"75/20")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-3.3"),(0,l.kt)("td",{parentName:"tr",align:null},"EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_ODD"),(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"75/20")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-3.4"),(0,l.kt)("td",{parentName:"tr",align:null},"ODD"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"75/20")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-3.5"),(0,l.kt)("td",{parentName:"tr",align:null},"ODD"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"75/20")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-3.6"),(0,l.kt)("td",{parentName:"tr",align:null},"ODD"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"75/20")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-3.7"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_ODD"),(0,l.kt)("td",{parentName:"tr",align:null},"EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"75/20")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-3.8"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_ODD"),(0,l.kt)("td",{parentName:"tr",align:null},"EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"75/20")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-3.9"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_ODD"),(0,l.kt)("td",{parentName:"tr",align:null},"EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"75/20")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-3.10"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"ODD"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"75/20")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-3.11"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"ODD"),(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"75/20")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-3.12"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"ODD"),(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"75/20")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-3.21"),(0,l.kt)("td",{parentName:"tr",align:null},"EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_ODD"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"20/75")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-3.22"),(0,l.kt)("td",{parentName:"tr",align:null},"EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_ODD"),(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"20/75")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-3.23"),(0,l.kt)("td",{parentName:"tr",align:null},"EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_ODD"),(0,l.kt)("td",{parentName:"tr",align:null},"3 (DUT5, DUT4, & DUT7)"),(0,l.kt)("td",{parentName:"tr",align:null},"20/75")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-3.24"),(0,l.kt)("td",{parentName:"tr",align:null},"ODD"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"1 (DUT4)"),(0,l.kt)("td",{parentName:"tr",align:null},"20/75")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-3.25"),(0,l.kt)("td",{parentName:"tr",align:null},"ODD"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"2 (DUT5 & DUT4)"),(0,l.kt)("td",{parentName:"tr",align:null},"20/75")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-3.26"),(0,l.kt)("td",{parentName:"tr",align:null},"ODD"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"3 (DUT5, DUT4, & DUT7)"),(0,l.kt)("td",{parentName:"tr",align:null},"20/75")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-3.27"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_ODD"),(0,l.kt)("td",{parentName:"tr",align:null},"EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"1 (DUT4)"),(0,l.kt)("td",{parentName:"tr",align:null},"20/75")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-3.28"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_ODD"),(0,l.kt)("td",{parentName:"tr",align:null},"EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"2 (DUT5 & DUT4)"),(0,l.kt)("td",{parentName:"tr",align:null},"20/75")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-3.29"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_ODD"),(0,l.kt)("td",{parentName:"tr",align:null},"EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"3 (DUT5, DUT6, & DUT7)"),(0,l.kt)("td",{parentName:"tr",align:null},"20/75")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-3.30"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"ODD"),(0,l.kt)("td",{parentName:"tr",align:null},"1 (DUT4)"),(0,l.kt)("td",{parentName:"tr",align:null},"The same as SHT-3.27 to SHT-3.29 with Tx and Rx reversed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-3.31"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"ODD"),(0,l.kt)("td",{parentName:"tr",align:null},"2 (DUT5 & DUT4)"),(0,l.kt)("td",{parentName:"tr",align:null},"The same as SHT-3.27 to SHT-3.29 with Tx and Rx reversed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SHT-3.32"),(0,l.kt)("td",{parentName:"tr",align:null},"HYBRID_EVEN"),(0,l.kt)("td",{parentName:"tr",align:null},"ODD"),(0,l.kt)("td",{parentName:"tr",align:null},"3 (DUT5, DUT4, & DUT7)"),(0,l.kt)("td",{parentName:"tr",align:null},"The same as SHT-3.27 to SHT-3.29 with Tx and Rx reversed")))),(0,l.kt)("p",null,"Test Setup: P2MP setup"),(0,l.kt)("p",null,"Procedure:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Associate network using E2E topology file with the (DN1) acting as the PoP\nnode."),(0,l.kt)("li",{parentName:"ul"},"Verify network connectivity with pings."),(0,l.kt)("li",{parentName:"ul"},"Bring the DN1 \u2194 DN2 up at laMaxMcs=12 and all the DN1 \u2194 CN links up at\nlaMaxMcs=9. For airtime allocation on DN1 set 77% of airtime for the DN \u2194 DN\nlink and 18% for the DN \u2194 CN links (the CNs share airtime allocation equally)."),(0,l.kt)("li",{parentName:"ul"},"Send bidirectional iPerf traffic between DN1 and DN2 from traffic generators\nonly and verify that we achieve 95% of expected."),(0,l.kt)("li",{parentName:"ul"},"Send bidirectional iPerf traffic from DN1 to all CNs from traffic generators.\nTraffic is distributed evenly between all attached CNs. Verify that we achieve\na minimum of 95% of the maximum throughput on each link."),(0,l.kt)("li",{parentName:"ul"},"Send bidirectional iPerf traffic from DN1 to all links from traffic generator\nto traffic generators. Verify that each link achieves a minimum of 95% of the\nmaximum throughput on each link."),(0,l.kt)("li",{parentName:"ul"},"Dissociate each CN one-by-one."),(0,l.kt)("li",{parentName:"ul"},"Dissociate DN1 from DN2.")),(0,l.kt)("p",null,"Passing:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"All assocs should succeed within 2 attempts"),(0,l.kt)("li",{parentName:"ul"},"iPerf performance for TCP is 95% and for UDP is 97% of expected for each test\nID, as shown in table above."),(0,l.kt)("li",{parentName:"ul"},"The slot map is 50:50 on the Hybrid DN sector"),(0,l.kt)("li",{parentName:"ul"},"All pings should pass"),(0,l.kt)("li",{parentName:"ul"},"All disassocs should pass")))}m.isMDXComponent=!0}}]);